name: test-workflow
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  job-1:
    runs-on: ubuntu-latest
    steps:
      - name: Run Step 1
        run: |
          echo "Running Step 1"
          sleep 30

  job-2:
    runs-on: ubuntu-latest
    steps:
      - name: Run Step 2
        run: |
          echo "Running Step 2"
          sleep 30

  e2e-test-1:
    container:
      image: mcr.microsoft.com/playwright:v1.50.0-noble
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
    - run: npm ci
    - run: npx playwright test example-1

    - name: Save and Upload Artifacts for Slack Notification
      uses: ./.github/actions/upload-artifacts
      if: ${{ !cancelled() }}
      with:
        job_name: ${{ github.job }}
        junit_path: 'test-results/junit.xml'
        report_url: 'http://www.yahoo.com' # replace with link to hosted report url

  e2e-test-2:
    container:
      image: mcr.microsoft.com/playwright:v1.50.0-noble
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
    - run: npm ci
    - run: npx playwright test example-2

    - name: Save and Upload Artifacts for Slack Notification
      uses: ./.github/actions/upload-artifacts
      if: ${{ !cancelled() }}
      with:
        job_name: ${{ github.job }}
        junit_path: 'test-results/junit.xml'
        report_url: 'http://www.google.com' # replace with link to hosted report url

  slack-notify:
      if: always()
      needs: [job-1, job-2, e2e-test-1, e2e-test-2]
      runs-on: ubuntu-latest
      steps:
        - name: Send Slack Notification
          uses: midleman/slack-workflow-status@v2.0.1
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            slack_token: ${{ secrets.SLACK_TOKEN }}
            notify_on: "never"
            channel: "U07KNKY6S5C"
            comment_junit_failures: "true"
            comment_junit_flakes: "true"

